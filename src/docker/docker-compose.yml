version: '3'

services:
  redis:
    image: "redis:latest"
    ports:
      - "6379:6379"
#    healthcheck:
#      test: ["CMD", "redis-cli", "ping"]
#      interval: 5s
#      timeout: 2s
#      retries: 30

  mysql:
    build:
      context: ./mysql
    ports:
      - "3306:3306"
    volumes:
      - ./db/mysql/data:/var/lib/mysql
      - ./db/mysql/init:/docker-entrypoint-initdb.d
    restart: always

    environment:
      MYSQL_ROOT_PASSWORD: 0000
#      MYSQL_PORT: 3306
      MYSQL_DATABASE: auction_server
#      MYSQL_USER: root
#      MYSQL_PASSWORD: auction_password

#    healthcheck:
#      test: ["CMD-SHELL", "mysql -h localhost -P ${MYSQL_PORT} -u ${MYSQL_USER} -p${MYSQL_PASSWORD} -e 'SELECT 1;'"]
#      interval: 5s
#      timeout: 2s
#      retries: 30


#  elasticsearch:
#    build:
#      context: ./elasticsearch
#    ports:
#      - "9300:9200"
#    environment:
#      - discovery.type=single-node
#    depends_on:
#      mysql:
#        condition: service_healthy

#  logstash:
#    build:
#      context: ./logstash
#    depends_on:
#      - elasticsearch

  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - "5672:5672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest

  spring-boot:
    build:
      context: ../../
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/auction_server
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 0000
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_ELASTICSEARCH_HOST: elasticsearch
      SPRING_ELASTICSEARCH_PORT: 9200
      AWS_SES_ACCESS_KEY: AKIAR4UWYARYCWW22MLE
      AWS_SES_SECRET_KEY: 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
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
      RABBITMQ_QUEUE_NAME: auction.queue
      RABBITMQ_EXCHANGE_NAME: auction.exchange
      RABBITMQ_ROUTING_KEY: auction.key
      TEST_API_KEY: sk_test_w5lNQylNqa5lNQe013Nq
    command: ["/bin/sleep", "30"]
    restart: on-failure
    depends_on:
      - mysql
      - redis
#      mysql:
#        condition: service_healthy
#      redis:
#        condition: service_healthy
